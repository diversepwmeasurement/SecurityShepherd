jobs:
  build:
    if: github.event_name != 'pull_request' && github.repository == 'OWASP/SecurityShepherd'
    name: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Set up JDK 1.8
      uses: actions/setup-java@v3.6.0
      with:
        distribution: zulu
        java-version: '8'
    - continue-on-error: true
      name: Build Maven with Docker Profile and Generate SBOM
      run: mvn clean install -Pdocker -DskipTests -B -DexcludeTestProject=true cyclonedx:makeBom
    - continue-on-error: true
      name: Upload WAR File
      uses: actions/upload-artifact@v3
      with:
        name: security_shepherd_war
        path: target/*.war
    - continue-on-error: true
      name: Docker Compose Build
      run: docker-compose build
    - continue-on-error: true
      id: tomcat
      name: Generate Tomcat Docker Image SBOM
      uses: anchore/sbom-action@v0
      with:
        format: cyclonedx-json
        image: owasp/security-shepherd
        output-file: ${{ github.workspace }}/target/owasp-security-shepherd-tomcat.cyclonedx.json
    - continue-on-error: true
      id: mariadb
      name: Generate MariaDB Docker Image SBOM
      uses: anchore/sbom-action@v0
      with:
        format: cyclonedx-json
        image: owasp/security-shepherd_mariadb
        output-file: ${{ github.workspace }}/target/owasp-security-shepherd-mariadb.cyclonedx.json
    - continue-on-error: true
      id: mongodb
      name: Generate MongoDB Docker Image SBOM
      uses: anchore/sbom-action@v0
      with:
        format: cyclonedx-json
        image: owasp/security-shepherd_mongo
        output-file: ${{ github.workspace }}/target/owasp-security-shepherd-mongodb.cyclonedx.json
    - continue-on-error: true
      name: Upload SBOMs
      uses: actions/upload-artifact@v3
      with:
        name: security_shepherd_sboms
        path: 'target/*.json

          target/*.xml

          '
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v3
      with:
        key: maven-output-${{ hashFiles('target/**') }}
        path: 'target/

          docker/mariadb/target

          docker/mongo/target

          '
  release-security-shepherd:
    if: github.event_name != 'pull_request' && github.repository == 'OWASP/SecurityShepherd'
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Log in to Docker Hub
      uses: docker/login-action@v2.1.0
      with:
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
    - continue-on-error: true
      id: meta
      name: Extract metadata (tags, labels) for Docker
      uses: docker/metadata-action@v4.1.1
      with:
        images: owasp/security-shepherd
    - continue-on-error: true
      name: Restore Cached Maven packages
      uses: actions/cache@v3
      with:
        key: maven-output-${{ hashFiles('target/**') }}
        path: 'target/

          docker/mariadb/target

          docker/mongo/target

          '
    - continue-on-error: true
      name: Set environment variables
      uses: c-py/action-dotenv-to-setenv@80f488cda311f44d43e687a4e94f54a050b7822a
      with:
        env-file: .env
    - continue-on-error: true
      name: Build and push Tomcat
      uses: docker/build-push-action@v3.2.0
      with:
        build-args: 'TOMCAT_DOCKER_VERSION

          TLS_KEYSTORE_FILE

          TLS_KEYSTORE_PASS

          ALIAS

          HTTPS_PORT'
        context: .
        labels: ${{ steps.meta.outputs.labels }}
        push: false
        tags: ${{ steps.meta.outputs.tags }}
name: Release to Dockerhub
on:
  repository_dispatch:
    types: trigger-ga___release.yml
